## 5. 한글 형태소 분석 기법

### 5.1 한글 형태소 분석기 소개

+ 형태소 분석

  + 한글 자연어 처리의 가장 중요하고 기초적인 역할 수행
  + 입력문자열을 형태소열로 바꾸는 작업
  + 띄어쓰기 단위의 어절인 단어(word)를 구성하는 각각의 형태소들을 인식하고 용언의 활용, 불규칙 활용이나 축약, 탈락현상이 일어난 형태소를 원형으로 복원하는 과정임 (강승식, 2002)

+ 형태소 분석의 활용도

  + 언어학적 측면
    + 특정 언어현상의 **생성과정**을 설명하는 데 용이하게 쓰일 수 있음
  + 전산학적 측면
    + 정보검색이나 자연어 처리 자동 처리시스템의 **구문 분석**의 전 단계 등의 용도로 쓰일 수 있음

+ 기존의 형태소 분석기

  + 기존의 형태소 분석기 대부분이 배경지식이나 문맥이 아닌 어휘사전과 규칙에 의존
  + 신조어의 품사태깅에 어려움이 있음
  + 인터넷 보급의 확산과 대량의 소셜 미디어 데이터의 확보가 용이한 지금의 상황에서는 효율성과 성능이 뛰어난 형태소 분석기 개발이 시급함

+ 형태소 (morpheme)

  + 의미의 **최소단위**
  + 더 이상 분석 **불가능한 가장 작은 의미 요소**

+ 형태소의 구분

  + 체언 : '명사', '대명사', '수사'
  + 용언 : '형용사', '동사'
  + 독립언 : '부사', '관형사', '감탄사'
  + 기능어 : '조사', '어미', '선어말어미', '접사'
  + 단순어의 어근(원형), 어미나 조사, 접두사, 접미사

+ 한글 형태소 분석기의 5가지 공통적 절차

  분석 대상 문헌집단 선정 후 

  + 전처리
    + 대상 문장 추출, 문장부호, 숫자, 특수문자열 처리, 어절 분리
  + 분석 후보 생성 - 원형 복원 규칙
    + 다양한 변형 규칙에 대해 원형 복원 규칙 적용
  + 결합 제약 검사 - 결합 제약 규칙
    + 결합 제약 규칙을 통해 분석 후보들 중에 잘못된 분석 결과가 있으면 제외시킴
  + 분석 후보 선택 - 시스템 사전
    + 어휘사전 정보 및 각종 제약 조건을 반영하여 최종 결과 도출
  + 후처리
    + 중의성 해소, 복함명사나 미등록어 처리, 준말 처리

+ 한글

  + 교착어(agglutinative language)의 일종
  + 어간(명사/동사) + 기능어(조사/어미) = 어절
  + 상황에 맞게 문장을 활용하기 때문에 **형태소의 품사에 대한 중의성**이 중요한 문제

+ 영어

  + 굴절어(inflectional language)
  + 어간의 변화 혹은 연관의 기능 형태소 결합을 통해 성, 수, 시제 표현
  + 영어에서 대부분의 명사는 동사로도 쓰일 수 있는 등 영어에서는 **품사의 중의성**이 중요한 문제

+ 예시

  + 영어 : I / go / to / school. (단어)
  + 한글 : 나는 / 학교에 / 갑니다. (어절)

+ 어휘분석(lexical analysis)

  + 어휘사전을 기본으로 하여 사전에 수록된 낱말들로 입력 문자열을 분석하는 방법
  + 형태소보다는 광범위한 단위에서 구분 정밀도에 손상이 없는 수준에서 어절을 구분함
  + 예시 
    + 형태소 분석 : 수행하다 -> 수행 + 하 + 다
    + 어휘 분석    : 수행하다 -> 수행하 + 다
  + 정보검색 측면에서는 질의어분석이나 색인과정에 형태소 분석보다 더 적절한 방법임

+ 어휘 분석 기법

  + **Lex** 사용 (구문 분석 대표적 프로그램)
  + 유한 오토마타 등의 특정 알고리즘을 사용한 어휘 분석기를 만듬

+ 형태소 분석의 난제

  + 형태소 분석의 모호성

    + 한글 : 감기는 :
      + (N 감기) + (J 는) : 질병 감기
      + (V 감) + (E 기) + (J 는) : "줄을 감다" 의 '감기는'
      + (V 감기) + (E 는) : "머리를 감기다"의 '감기는'
    + 영어 : 감기의 'cold' / 춥다의 'cold'

  + 표준화나 통일된 기준 필요

    + 한글 형태소 분석기들의 분석 결과 차이가 큼

    + 예시) "그를 만난 건 학교에서 였다"

      |        |                UTagger                |               꼬꼬마 형태소 분석기                |
      | :----: | :-----------------------------------: | :--------------------------------------: |
      |   그를   |             그01/NP+를/JKO              |              그르/VV + ㄹ/ETD               |
      |   만난   |             만나/VV + ㄴ/ETM             |                  만난/NNG                  |
      |   건    |            것01/NNB + ㄴ/JX             |                   건NNG                   |
      | 학교에서였다 | 학교/NNG + 에서/JKB + 이/VCP + 었/EP + 다/EF | 학교/NNG +  에/JKM + 서이/VV + 었/EPT 다/EFN + ./SF |

  + 기타 문제

    + 띄어쓰기문제, 신조어와 맞춤법 오류 등으로 인한 **미등록 어휘문제**가 형태소 분석기의 성능에 영향을 미침
    + **복함명사 처리문제** : (예) '남품 단가'나 '경제 민주화'는 복합명사로 처리되어야 하지만 대부분의 형태소 분석기는 두 개의 독립된 명사로 품사 태깅음 하게 됨

+ 한글 형태소 분석방법의 난제

  + 맞춤법 교정 기법에서 결합 제약 검사 완화로 인한 결합 조건에 위배되는 중간 후보 생성이 필요할 때와 정확한 분석을 통해 교정안을 제시하고 대치하고자 할 때 필요함
  + 정보검색 - 복합명사 및 미등록어 처리의 강화
    + 기계번역 - 중의성 강화기능 해소
    + 자동 띄어쓰기 교정기 - 어절 분리를 후속 분석단계에서 또한 융합해서 처리해야 함
    + 음성입력 분야 - 음운현상에 따른 자동 교정 및 자동 띄어쓰기 등의 전처리 기능 강화

+ 한글의 특성

  + 코드 변환
    + 완성형, 조합형, 유니코드 등 다양한 코드가 혼용되어 사용되기 때문에 코드 변환이 어려움
  + 음절 분석
    + 한글의 가능한 음정 조합 수 : 11,172음절

### 5-2 한글 품사

+ 한글 품사 태깅

  + 규칙 기반 접근방법
    + 긍정 정보 및 부정 정보 활용을 통해 점수를 부여하는 방법
    + 복합적인 접근방법 채택 시에 형태소 분석의 오류 처리를 위한 수정 정보 활용을 위해서 활용이 가능함
    + 정밀하게 고안된 규칙의 경우 정확성은 높지만 새로운 용어나 규칙의 변화로 인하여 규칙 구축이 어려움
  + 통계적 접근방법
    + 충분한 분량의 태그가 제공되는 말뭉치로부터 통계 정보를 추출해 활용하는 방법
    + 태그 부착 말뭉치 구축 부담이 크지만 나머지 부분은 자동화가 가능
    + Hidden Markov Model이나 Conditional Random Filed 등의 기계학습방법을 통해 품사를 예측
  + 복합적 접근방법
    + 규칙 기반 접근방법을 적용한 후에 해소 안된 부분에 대하여 통계적 접근방법을 적용할 수도 있고 규칙 기반 접근방법과 통계적 접근방법을 동시 적용하여서 높은 선호도를 결과로 채택하거나 Bootstrapping방법을 사용할 수 있음

+ 세종 태그 세트

  + 한국어의 대표적인 품사 부착 말뭉치로 국립국어원에서 발표한 현대 문어 형태 문석 말뭉치
  + 채언 

    + 명사 (NN)
      + 일반명사 (NNG)
      + 고유명사 (NNP)
      + 의존명사 (NNB)
    + 대명사 (NP)
    + 수사 (NR)
    + 동사 (VV)
  + 용언
    + 형용사 (VA)
    + 보조용언 (VX)
    + 지정사 (VC)
      + 긍정지정사 (VCP)
      + 부정지정사 (VCN)
  + 수식언
    + 관형사 (MM)
    + 부사 (MA)
      + 일반부사 (MAG)
      + 접속부사 (MAJ)
  + 독립언
    + 감탄사 (IC)
  + 관계언
    + 걱조사 (JK)
      + 주격조사 (JKS)
      + 보격조사 (JKC)
      + 관형격조사 (JKG)
      + 목적격조사 (JKD)
      + 부사격조사 (JKB)
      + 호격조사 (JKV)
      + 인용격조사 (JKQ)
    + 보조사 (JX)
    + 접속조사 (JC)
  + 의존형태
    + 어미 (E)
      + 선어말어미 (EP)
      + 종결어미 (EF)
      + 연결어미 (EC)
      + 명사형전성어미 (ETN)
      + 관형형전성어미 (ETM)
    + 접두사 (XP)
      + 제언접두사 ([X?K?]PN)
    + 접미사 (XS)
      + 명사파생접미사 (XSN)
      + 동사파생접미사 (XSV)
      + 형용사파생접미사 (XSA)
    + 어근 (XR)
  + 기호
    + 마침표, 물음표, 느낌표 (SF)
    + 쉼표, 가운뎃점, 콜론, 빗금 (SP)
    + 따옴표, 괄호표, 줄표 (SS)
    + 줄임표 (SE)
    + 붙임표(물결, 숨김, 빠짐) (SO)
    + 외국어 (SL)
    + 한자 (SH)
    + 기타기호(논리 수학기호, 화폐기호 등) (SW)
    + 명사추정범주 (NF)
    + 용언추정범주 (NV)
    + 숫자 (SN)
    + 분석불능범주 (NA)


### 5-3 한글 형태소 분석 기법 소개

+ 일반적인 형태소 분석 기법
  + 다층 형태소 분석
    + 촙스키 - 변행생성이론 모델 기반
  + 2-레벨 형태론(two-level model) 기반 기법
+ 한글 형태소 분석기 종류
  + [UTagger](http://nlplab.ulsan.ac.kr)
    + 울산과기대에서 개발
    + 한국어 처리를 위해 각 어절을 CKMA 알고리즘으로 분석하여 후보를 생성하고, 히든 마르코프 모델(HMM) 기법을 이용하여 좌우 어절을 고려해서 최적해랄 결정
    + CKMA는 입력받은 어절을 2부분으로 나누어 분석하는데 일반적으로 형식 형태소와 실질 형태소로 구분하여 처리
    + HMM은 이전 상태가 다음 상태에 영향을 미치나고 가정하고 상태 전이 확률을 계산하여 최적열을 결정 하는 방법
    + C언어로 만들어짐
  + [꼬꼬마 한국어 형태소 분석기](http:kkma.snu.ac.kr)
    + 서울대
    + 다이나믹 프로그래밍을 이용해서 만듬
    + 띄어쓰기 오류에 덜 민감한 한글 형태소분석기
    + Java를 기반으로 만듬
    + 속도를 위해서는 기분석 사전을 이용한 인접 조건 검사방식을 이용하고, 품질을 위해서는 휴리스틱(Heauristic)과 히든 마르코프 모델에 기반한 확률모델(Probablistic Model)을 이용
    + 형태소를 '체언, 용언, 관형사, 부사, 감탄사, 조사, 선어말어미, 어말어미, 접두사, 접미사, 어근, 부호, 분석불능, 한글이외'로 나누어 표현하고 각각 형태소 안에 세부 분류를 두어 알파벳으로 표기
  + [MACH](http://cs.sungshin.ac.kr/~shim/demo/mach.html)
    + 성신대
    + 코드 변환과정과 축약, 탈락, 불규칙 활용 등으로 변형된 형태소의 원형을 복원하고 분석 후보를 생성하는 등의 과정을 거치지 않고 형태소 사전에서 제공되는 인접 조건에 대한 검사만으로 형태소 분석을 하는 분석기
  + [KLT](http://nlp.kookmin.ac.kr)
    + 국민대
    + 초기 한글 형태소 분석을 선도한 분석방법으로 국어 형태소 분석, 자동색인(색인어 추출), 한글 맞춤법 검사 및 교정, 복합명사 분해, 한글 자동 띄어쓰기 등 다양한 기능을 제공
    + 최신 자료에 대한 형태소 분석에는 덜 적합
  + [한나눔](http://semanticweb.kaist.ac.kr)
    + 카이스트
    + 각 단계를 모듈별로 분할하여 workflow 개념으로 만들어진 모듈을 조립하는 형식으로 설계되었고 광범위한 한글 태그 종류를 제공하고 있음
    + Text Preprocessing : 문장 경계 인식, 필터링, 자동 띄어쓰기 등 형태소 분석 이전에 필요한 전처리 작업을 수행
    + Morphological Analysis: 입력 문장에 대해서 어절 단위로 발생가능한 모든 형태소 분석 결과를 생성
    + POS Tagging : 가장 유망한 형태소 분석 결과들을 선택하여 입력 문장에 대한 최종 품사 태깅 결과를 반환
  + [Arirang(Lucene)](https://issues.apache.org/jira/browse/LUCENE-4956)
    + 루씬 검색엔진에 사용되는 언어 분석기 중 한글 분석을 위해 개발됨
    + 루씬 : 한글, 중국어, 일본어를 하나의 분석기에서 형태소 분석하도록 설계되어 있어서 한글 형태소 분석에 허점이 많았음
    + 검색엔진에 특화된 한글 형태소 분석기 개발을 목표로 하며, 형태소 분석을 위한 말뭉치 학습과 사전 목록 일부는 '21세기 세종계획'의 성과물을 사용함
  + [Komoran](http://shineware.tistory.com/entry/KOMORAN-ver-24)
    + SHINEWARE에서 제작한 **오픈 소스** 형태로 제공되는 형태소 분석기
    + 여러 어절을 하나의 품사로 분석 가능함으로써 형태서 분석기의 적용 도메인에 따라 공백이 포함된 고유명사를 더 정확하게 분석할 수 있음
    + 자소 단위 TRIE 사전 구성으로 사전 재탐색 횟수를 최소화하여 사전 탐색 속도 향상
    + 한국어에서 나타나는 불규칙을 학습 코퍼스 내에서 자동으로추출하여 불규칙 어절에 대한 분석 정확률을 높임
    + TRIE 및 압축된 사전 정보를 사용하여 메모리 사용률을 최소화함
    + **사용자가 사전에 새로운 단어들을 추가 가능**, 신조어 및 고유명사 분석 가능
  + [Twitter-Korean-text](https://github.com/twitter/)
    + 스칼라로 쓰인 한국어 처리기
    + 현재 텍스트 정규화와 형태소 분석, 스테밍을 지원하고 있음
    + 짧은 트윗이나 비정형 소설 미디어 텍스트에 특화되어 있음
